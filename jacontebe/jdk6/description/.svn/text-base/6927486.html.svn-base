<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>jdk bug 6927486</title>
</head>
<body>
	

		<h1><b>Bug 6927486</b></h1>
		
	<h2><b>Bug Description:</b></h2>
    <p>
	This is a deadlock bug.
    <br>The following is an example of deadlock thread dump:
	<pre>
"Thread-1": waiting to lock monitor 0x0000000005e5ed08 (object 0x000000003ff97af0, 
    a java.util.Hashtable),which is held by "Thread-0"
"Thread-0": waiting to lock monitor 0x0000000005e5ec60 (object 0x000000003ff97ba0, 
    a java.util.Hashtable),which is held by "Thread-1"
  
Java stack information for the threads listed above:
===================================================
"Thread-1":
    at java.util.Hashtable.writeObject(Hashtable.java:814)
    - waiting to lock <font color="red"><0x000000003ff97af0> (a java.util.Hashtable)</font>
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at MyObject.writeObject(Test6927486.java:54)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at java.util.Hashtable.writeObject(Hashtable.java:824)
    - locked <font color="blue"><0x000000003ff97ba0> (a java.util.Hashtable)</font>
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at MyThread.run(Test6927486.java:75)
"Thread-0":
    at java.util.Hashtable.writeObject(Hashtable.java:814)
    - waiting to lock <font color="blue"><0x000000003ff97ba0> (a java.util.Hashtable)</font>
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at MyObject.writeObject(Test6927486.java:54)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at java.util.Hashtable.writeObject(Hashtable.java:824)
    - locked <font color="red"><0x000000003ff97af0> (a java.util.Hashtable)</font>
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
    at MyThread.run(Test6927486.java:75)

	</pre> More details about this bug are at
	<a href="https://bugs.openjdk.java.net/browse/JDK-6927486">JDK-6927486</a> JIRA page.
</p>
	
	<h2>
		<b>How To Reproduce:</b>
	</h2>

	<p>
		This bug is reproduced under JDK 1.6.0.
        <br>It started at JDK 1.6.0, and has been fixed since JDK 1.7.0.
        <br>Execute the following scripts to run the test to reproduce the bug (assume the location of the jdk6 test project is jdk_test_home).
	</p>
	<p>
		<b>Linux:</b><br>
		<i>${jdk_test_home}/scripts/6927486.sh [--monitoroff] [--javaloc path]</i><br>
		<b>Windows:</b><br>
		<i>%jdk_test_home%\scripts\6927486.bat [--monitoroff] [--javaloc path]</i><br>
	<p><b>Example:</b>
	<br>
		Use monitor to report and terminate the program when deadlock happens:<i><br>${jdk_test_home}/scripts/6927486.sh</i>
	<br><br>
		Turn off monitor:<br> <i> ${jdk_test_home}/scripts/6927486.sh
			--monitoroff</i>
	</p>
	<table border="1">
		<tbody>
			<tr>
				<td>Option</td>
				<td>Function</td>
                <td>Default Value</td>
                <td>Valid Values</td>

			</tr>


			<tr>
				<td>--monitoroff, -mo</td>
				<td>Turn off to stop reporting bug messages and ending program
					when the test runs into the expected concurrency bug which is
					a deadlock.<br> User has to terminate the program manually
					when this option is set.
				</td>
                <td>N/A</td>
                <td>N/A</td>


			</tr>
			<tr>
				<td>--javaloc</td>
				<td>The location of JDK that is eligible to reproduce the bug, if your java environment is not eligible.
<br>In this case, it's JDK 1.6.0.
It should be the absolute path to the JDK's java starter and ended with "/".<br>
For example: ~/jdk/home/jdk1.6.0/bin/</td>
        <td>N/A</td>
                <td>string</td>
			</tr>
		</tbody>
	</table>
	
</body>
</html>