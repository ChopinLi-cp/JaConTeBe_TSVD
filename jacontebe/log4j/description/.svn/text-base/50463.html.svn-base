<!DOCTYPE html>
<html><head>





<meta charset="UTF-8"><title>log4j bug 50463</title></head><body>
	

		<h1><b>Bug 50463</b></h1>
		<h2><b>Bug Description:</b></h2>
<p>This is a wait-notify deadlock bug. <br>
When log4j works with <b>AsyncAppender</b>,
log appender threads put log events
into a buffer and wait when the buffer is full, and a dispatcher thread
dispatches events in the buffer. But when
an exception happens inside the dispatch thread, the dispatcher thread
just goes down and there will be no one to deal with the full filled
buffer and notify the
waiting appender threads. So the waiting appender threads keep waiting
forever.
<br>
 
The following is an example of starvation thread dump:
	<pre>Thread[main,5,main] is waiting:<br>   at java.lang.Object.wait(Native Method) <br>   at java.lang.Thread.join(Thread.java:1186) <br>   at java.lang.Thread.join(Thread.java:1239) <br>   at org.apache.log4j.Test50463.logToFillBuffer(Test50463.java:78) <br>   at org.apache.log4j.Test50463.main(Test50463.java:62) <br><br>Thread[Thread-11,5,main] is waiting:<br>   at java.lang.Object.wait(Native Method) <br>   at java.lang.Object.wait(Object.java:485) <br>   at org.apache.log4j.AsyncAppender.append(AsyncAppender.java:104) <br>   at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230) <br>   at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65) <br>   at org.apache.log4j.Category.callAppenders(Category.java:203) <br>   at org.apache.log4j.Category.forcedLog(Category.java:388) <br>   at org.apache.log4j.Category.error(Category.java:302) <br>   at org.apache.log4j.Test50463$FillBufferThread.run(Test50463.java:95) </pre>
	
	
	More details about this bug are at <a href="https://issues.apache.org/bugzilla/show_bug.cgi?id=50463">LOG4J-50463</a>
		JIRA page.
	</p>
	<h2>
		<b>How To Reproduce: </b>
	</h2>
<p>
		This bug is reproduced under log4j 1.2.14 and JDK 1.6.0_33.<br>Execute
the following scripts to run the test to reproduce the bug (assume the
location of the log4j test project is log4j_test_home).</p>
<p>
		<b>Linux:</b><br> <i>${log4j_test_home}/scripts/50463.sh
			[--monitoroff]</i><br> <b>Windows:</b><br> <i>%log4j_test_home%\scripts\50463.bat
			[--monitoroff]</i>
	</p>
	<p><b>Example:<b>
		Use monitor to report and terminate the program when forever waiting
		happens:<i><br>${log4j_test_home}/scripts/50463.sh</i>
		<br><br>
		Turn off monitor:<br> <i> ${log4j_test_home}/scripts/50463.sh
			--monitoroff</i>
	</p>
	<table border="1">
		<tbody>
			<tr>
				<td>Option</td>
				<td>Function</td>


			</tr>


			<tr>
				<td>--monitoroff, -mo</td>
				<td>Turn off to stop reporting bug messages and ending program
					when test <br>runs into the expected concurrency bug which is
					a forever waiting.<br> User has to terminate the program
					manually when this option is set.
				</td>


			</tr>
		</tbody>
	</table>
</body></html>