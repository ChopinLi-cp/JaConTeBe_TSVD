<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>jdk7 bug 8010939</title>
</head>
<body>


	<h1>
		<b>Bug 8010939</b>
	</h1>

	<h2>
		<b>Bug Description:</b>
	</h2>
    <p>
	This is a deadlock bug.
	<br>The following is an example of deadlock thread dump:
	<pre>
"ReadConfig":
  waiting to lock monitor 0x000000000c02f200 (object 0x00000007d5e7a930, a java.util.logging.LogManager$LoggerContext),  which is held by "SetupLogger"
"SetupLogger":
  waiting to lock monitor 0x000000000e7d5dd8 (object 0x00000007d5e79cc0, a java.util.logging.LogManager),  which is held by "ReadConfig"

Java stack information for the threads listed above:
===================================================
"ReadConfig":
    at java.util.logging.LogManager$LoggerContext.findLogger(LogManager.java:489)
    - waiting to lock <font color="red"><0x00000007d5e7a930> (a java.util.logging.LogManager$LoggerContext)</font>
    at java.util.logging.LogManager.setLevelsOnExistingLoggers(LogManager.java:1356)
    - locked <font color="blue"><0x00000007d5e79cc0> (a java.util.logging.LogManager)</font>
    at java.util.logging.LogManager.readConfiguration(LogManager.java:1115)
    at java.util.logging.LogManager.readConfiguration(LogManager.java:988)
    at Test8010939$ReadConfig.run(Test8010939.java:107)
    at java.lang.Thread.run(Thread.java:722)
"SetupLogger":
    at java.util.logging.LogManager.drainLoggerRefQueueBounded(LogManager.java:811)
    - waiting to lock <font color="blue"><0x00000007d5e79cc0> (a java.util.logging.LogManager)</font>
    at java.util.logging.LogManager$LoggerContext.addLocalLogger(LogManager.java:511)
    - locked <font color="red"><0x00000007d5e7a930> (a java.util.logging.LogManager$LoggerContext)</font>
    at java.util.logging.LogManager.addLogger(LogManager.java:848)
    at java.util.logging.LogManager.demandLogger(LogManager.java:405)
    at java.util.logging.Logger.demandLogger(Logger.java:317)
    at java.util.logging.Logger.getLogger(Logger.java:361)
    at Test8010939$SetupLogger.run(Test8010939.java:95)
    at java.lang.Thread.run(Thread.java:722)
	</pre>
	More detail about this bug is at
	<a href="https://bugs.openjdk.java.net/browse/JDK-8010939">JDK-8010939</a> JIRA page.
    </p>
	<h2>
		<b>How To Reproduce:</b>
	</h2>

	<p>
		This bug is reproduced under JDK 1.7.0_17.
        <br>It started at JDK 1.7.0_13, and has been fixed since JDK 1.7.0_25.
        <br>Execute the following scripts to run the test to reproduce the bug (assume the location of the jdk7 test project is jdk7_test_home).
	</p>
	<p>
		<b>Linux:</b><br> <i>${jdk7_test_home}/scripts/8010939.sh 
			[--loops arg] [--monitoroff] [--javaloc path]</i> <br> <b>Windows:</b><br> <i>%jdk7_test_home%\scripts\8010939.bat
			[--monitoroff] [--javaloc path]</i>
	<p>
        <b>Example:</b>
    <br>
		Use monitor to report and terminate the program when deadlock happens:
    <br><i>${jdk_test_home}/scripts/8010939.sh</i>
	<br><br>
		Turn off monitor:
        <br> <i> ${jdk_test_home}/scripts/8010939.sh
			--monitoroff</i>
	</p>

	<p>
		The default argument values will be taken if not specified. For
		example, <br> <i>${groovy_test_home}/scripts/4292.sh</i> <br>
		is the same as <br> <i>${groovy_test_home}/scripts/4292.sh
			--threadnum 4 --loops 5</i>
	</p>


	<table border="1">
		<tbody>
			<tr>
				<td>Option</td>
				<td>Function</td>
				<td>Default Value</td>
                <td>Valid Values</td>

			</tr>
			<tr>
				<td>--loops, -l</td>
				<td>set the number of loops, when the test checks whether a race could happen. Default value is 5 if
this option is not set explicitly.</td>

				<td>5</td>
				<td>integer</td>
			</tr>

			<tr>
				<td>--monitoroff, -mo</td>
				<td>Turn off to stop reporting bug messages and ending program
					when the test runs into the expected concurrency bug which is a
					deadlock.<br> User has to terminate the program manually when
					this option is set.
				</td>
				<td>N/A</td>
                <td>N/A</td>


			</tr>
			<tr>
				<td>--javaloc</td>
				<td>The location of JDK that is eligible to reproduce the bug,
					if your java environment is not eligible. <br>In this case,
					it's JDK 1.7.0_13. It should be the absolute path to the JDK's java starter
					and ended with "/".<br> For example: ~/jdk/home/jdk1.7.0_13/bin/
				</td>
				<td>N/A</td>
                <td>string</td>

			</tr>
		</tbody>
	</table>
</body>
</html>